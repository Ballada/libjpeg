/* target information */
@import "version.inc";

#product-info  {
    product-name: "libjpeg";
    version: "8c";
    original-source-location: "http://ijg.org/files/jpegsr8c.zip";
    original-source-website: "http://ijg.org";
    license: "Custom license, see README";
    packager: "Rafael Rivera <rafael@withinwindows.com>";
}
 

test {
    set: COMPILERS="${COMPILERS??vc10}";
    default : false;
    uses: release;
    build-command: @"
	    for %%A in (${COMPILERS}) do (
            pushd output\%%A\x64\Release\bin\
            rem do tests here
            djpeg ..\..\..\..\..\testorig.jpg testout.jpg
            fc /B testout.jpg ..\..\..\..\..\testimg.ppm
            if ERRORLEVEL 1 goto failed

            djpeg -bmp -color 256 ..\..\..\..\..\testorig.jpg testout.bmp
            fc /B testout.bmp ..\..\..\..\..\testimg.bmp
            if ERRORLEVEL 1 goto failed
            
            cjpeg ..\..\..\..\..\testimg.ppm testout.jpg
            fc /B testout.jpg ..\..\..\..\..\testimg.jpg
            if ERRORLEVEL 1 goto failed

            cjpeg -progressive -optimize ..\..\..\..\..\testimg.ppm testout.jpg
            fc /B testout.jpg ..\..\..\..\..\testimgp.jpg
            if ERRORLEVEL 1 goto failed

            popd

            pushd output\%%A\x64\Release\bin\
            djpeg ..\..\..\..\..\testorig.jpg testout.jpg
            fc /B testout.jpg ..\..\..\..\..\testimg.ppm
            if ERRORLEVEL 1 goto failed
            
            djpeg -bmp -color 256 ..\..\..\..\..\testorig.jpg testout.bmp
            fc /B testout.bmp ..\..\..\..\..\testimg.bmp
            if ERRORLEVEL 1 goto failed
            
            cjpeg ..\..\..\..\..\testimg.ppm testout.jpg
            fc /B testout.jpg ..\..\..\..\..\testimg.jpg
            if ERRORLEVEL 1 goto failed

            cjpeg -progressive -optimize ..\..\..\..\..\testimg.ppm testout.jpg
            fc /B testout.jpg ..\..\..\..\..\testimgp.jpg
            if ERRORLEVEL 1 goto failed

            goto passed
:failed
            echo ""Test(s) failed""
:passed
            popd
        )
    ";
};

package {
    
    default : false;
    uses : sign;
    
    targets: { 
        @"copkg\libjpeg[vc10]-${package-version}-x86.msi",
        @"copkg\libjpeg-dev[vc10]-${package-version}-x86.msi",
        @"copkg\libjpeg-dev-common-${package-version}-any.msi",
        @"copkg\libjpeg[vc10]-${package-version}-x64.msi",
        @"copkg\libjpeg-dev[vc10]-${package-version}-x64.msi"
    };
    
    build-command : @"
        REM THERE IS SOME GOOFY STUFF IN HERE TO WORK AROUND A COUPLE BUGS IN AUTOPACKAGE.
        REM FIXES COMING SOON...
        cd COPKG
        coapp add-feed %cd%\
        coapp --force-scan list 
        autopackage libjpeg-dev-common.autopkg || goto failed
        coapp --force-scan list 
        autopackage libjpeg[vc10]-x86.autopkg libjpeg-dev[vc10]-x86.autopkg || goto failed
        coapp --force-scan list 
        autopackage libjpeg[vc10]-x64.autopkg libjpeg-dev[vc10]-x64.autopkg || goto failed
        coapp --force-scan list 
        coapp delete-feed %cd%\
        ptk update-version
    ";

	clean-command: @"del COPKG\*.msi COPKG\*.wixpdb";
	
};


update-version {
    default : false;
    
    build-command : @"
        REM auto-increment version.inc file...
        
        cd COPKG
        setlocal EnableDelayedExpansion
        for /F ""tokens=4,5,6,7  delims=.; "" %%v in (version.inc) do (
            set /a build=%%y + 1
            set VERSTRING=#define { package-version: %%v.%%w.%%x.!build!; }
        )
        echo !VERSTRING! > version.inc
    ";
}

release {
    set: COMPILERS="${COMPILERS??vc10}";

    build-command: @"
        for %%A in (${COMPILERS}) do (
           ptk x86 --CONFIG=Release --COMP=%%A
           ptk x64 --CONFIG=Release --COMP=%%A
        )
    ";
};

sign {
    default : false;
    uses: release;
    build-command: @"simplesigner.exe --nologo --sign output\**.dll output\**.exe";
};


x86 {
    set: {
        CONFIG="${CONFIG??Release}";
        COMP="${COMP??vc10}";
    };

    compiler:"${COMP}";
    platform:x86;
     
    targets: { 
        // main library
        "output\${COMP}\x86\${CONFIG}\bin\jpeg.lib",
        "output\${COMP}\x86\${CONFIG}\bin\jpegs.lib",
        "output\${COMP}\x86\${CONFIG}\bin\jpeg.dll",                
        // extra utilities
        "output\${COMP}\x86\${CONFIG}\bin\cjpeg.exe",
        "output\${COMP}\x86\${CONFIG}\bin\djpeg.exe",
        "output\${COMP}\x86\${CONFIG}\bin\jpegtran.exe",
        "output\${COMP}\x86\${CONFIG}\bin\rdjpgcom.exe",
        "output\${COMP}\x86\${CONFIG}\bin\wrjpgcom.exe",
    };
     
    build-command:@"
        copy jconfig.vc jconfig.h       
        copy makejsln.v10 makejsln.sln
        copy makeasln.v10 makeasln.sln
        copy makejvcx.v10 jpeg.vcxproj
        copy makelvcx.v10 jpegdll.vcxproj
        copy makecvcx.v10 cjpeg.vcxproj
        copy makedvcx.v10 djpeg.vcxproj
        copy maketvcx.v10 jpegtran.vcxproj
        copy makewvcx.v10 wrjpgcom.vcxproj
        copy makervcx.v10 rdjpgcom.vcxproj
        msbuild /p:Platform=Win32 /p:Configuration=Release makejsln.sln
        msbuild /p:Platform=Win32 /p:Configuration=Release makeasln.sln
    ";
     
    clean-command:@"
        attrib -S -H -R *
        del /Q *.sdf *.suo *.sln *.vcxproj *.user jconfig.h 2>NUL
        rmdir /S /Q output 2>NUL
    ";
};

x64 {
    set: {
        CONFIG="${CONFIG??Release}";
        COMP="${COMP??vc10}";
    };

    compiler:"${COMP}";
    platform: x64;
     
    targets: { 
        // main library
        "output\${COMP}\x64\${CONFIG}\bin\jpeg.lib",
        "output\${COMP}\x64\${CONFIG}\bin\jpegs.lib",
        "output\${COMP}\x64\${CONFIG}\bin\jpeg.dll",                
        // extra utilities
        "output\${COMP}\x64\${CONFIG}\bin\cjpeg.exe",
        "output\${COMP}\x64\${CONFIG}\bin\djpeg.exe",
        "output\${COMP}\x64\${CONFIG}\bin\jpegtran.exe",
        "output\${COMP}\x64\${CONFIG}\bin\rdjpgcom.exe",
        "output\${COMP}\x64\${CONFIG}\bin\wrjpgcom.exe",
    };
     
    build-command:@"
        copy jconfig.vc jconfig.h       
        copy makejsln.v10 makejsln.sln
        copy makeasln.v10 makeasln.sln
        copy makejvcx.v10 jpeg.vcxproj
        copy makelvcx.v10 jpegdll.vcxproj
        copy makecvcx.v10 cjpeg.vcxproj
        copy makedvcx.v10 djpeg.vcxproj
        copy maketvcx.v10 jpegtran.vcxproj
        copy makewvcx.v10 wrjpgcom.vcxproj
        copy makervcx.v10 rdjpgcom.vcxproj
        msbuild /p:Platform=x64 /p:Configuration=${CONFIG} makejsln.sln
        msbuild /p:Platform=x64 /p:Configuration=${CONFIG} makeasln.sln
    ";
     
    clean-command:@"
        attrib -S -H -R *
        del /Q *.sdf *.suo *.sln *.vcxproj *.user jconfig.h 2>NUL
        rmdir /S /Q output 2>NUL
    ";
};